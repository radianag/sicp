#lang racket
(define (seqs-n select seq)
  (if (null? seq)
      '()
      (cons (select seq)
	    (seqs-n select (cdr seq)))))
(define (car-n seq)
  (seqs-n caar seq))
(define (cdr-n seq)
  (seqs-n cdar seq))

(define (accumulate-n op init seqs)
  (if (null? (car seqs))
      '()
      (cons (accumulate op init (car-n seqs))
	    (accumulate-n op init (cdr-n seqs)))))